name: Deploy frontend application

on:
  push:
    branches:
      - new-frontend-version  # Trigger deployment on this branch

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Set up QEMU (for cross-platform builds)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Step 3: Set up Docker Buildx (enables advanced build features)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Log in to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Step 5: Build and push the Docker image to DockerHub
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: jirapat66/234-deploylab-frontend-update:latest

      # Step 6: Copy the docker-compose-prod.yml file to the server via SSH
      - name: Copy file via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          source: "docker-compose-prod.yml"
          target: "/home/ubuntu/frontend"

      # Step 7: Deploy with Docker Compose
      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/frontend
            echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
            docker compose -f docker-compose-prod.yml down  # Stops and removes the containers (if they exist)
            docker compose -f docker-compose-prod.yml pull  # Pulls the updated Docker image
            docker compose -f docker-compose-prod.yml up -d  # Starts the new containers on port 9999
            rm -rf /home/ubuntu/frontend  # Removes the files from the server after deployment
